name: Deploy careit_backend

on:
  push:
    branches: [ 'main' ]

jobs:
  ci:
    runs-on: ubuntu-24.04
    outputs:
      docker-tag: ${{ steps.set-docker-tag.outputs.DOCKER_TAG }}

    defaults:
      run:
        working-directory: careit

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Get current time
        id: current-time
        uses: josStorer/get-current-time@v2.0.2
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -f ./Dockerfile -t whwkahd3/careit:${{ steps.current-time.outputs.formattedTime }} .
          docker push whwkahd3/careit:${{ steps.current-time.outputs.formattedTime }}

      - name: Set Docker Tag Output
        id: set-docker-tag
        run: echo 'DOCKER_TAG=${{ steps.current-time.outputs.formattedTime }}' >> $GITHUB_OUTPUT

  cd:
    runs-on: ubuntu-20.04
    needs: [ci]
    env:
      DOCKER_TAG: ${{ needs.ci.outputs.docker-tag }}

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Check docker tags
            echo "🐳 Docker Tag: ${{ env.DOCKER_TAG }}"
            
            # Pull the new image
            echo "🐳 Docker Image Pull"
            docker pull whwkahd3/careit:${{ env.DOCKER_TAG }}

            # Stop & Remove existing container if exists
            if [ $(docker ps -aq -f name=careit) ]; then
              echo "🐳 Docker Stop"
              docker stop careit || true
              echo "🐳 Docker Remove"
              docker rm careit || true
            fi
            
            # Start new container
            echo "🐳 Docker Run"
            docker run -d --name careit \
              -p 8080:8080 \
              --log-driver json-file \
              --log-opt max-size=10m \
              --log-opt max-file=3 \
              --env-file /home/ubuntu/careit/.env \
              whwkahd3/careit:${{ env.DOCKER_TAG }}
            
            # Check
            echo "🐳 Docker ps"
            docker ps
            
            # Cleanup old images
            echo "🧹 Cleaning up old Docker images"
            docker rmi -f $(docker images -q) || true
